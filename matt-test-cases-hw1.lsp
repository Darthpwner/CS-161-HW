;Test cases
(TREE-CONTAINS 3 '((1 2 3) 7 8))
(TREE-CONTAINS 4 '((1 2 3) 7 8))

(TREE-MAX '((1 2 3) 7 8))
(TREE-MAX '((1 2 3) 7 900))
(TREE-MAX '((1 2 3) 7 81))
(TREE-MAX '((1 2 3) 7 9))

(TREE-ORDER 3)
(TREE-ORDER '((1 2 3) 7 8))

(SUB-LIST '(a) 0 1)
(SUB-LIST '(a b c d) 0 1)
(SUB-LIST '(a b c d) 0 2)
(SUB-LIST '(a b c d) 0 3)
(SUB-LIST '(a b c d) 0 4)
(SUB-LIST '(a b c d) 1 1)
(SUB-LIST '(a b c d) 1 2)
(SUB-LIST '(a b c d) 1 3)
(SUB-LIST '(a b c d) 1 4)
(SUB-LIST '(a b c d) 2 1)
(SUB-LIST '(a b c d) 2 2)
(SUB-LIST '(a b c d) 2 3)
(SUB-LIST '(a b c d) 2 4)

(SUB-LIST '(a b c d) 2 0)
(SUB-LIST '(a b c d) 3 2)
(SUB-LIST '(a b c d) 4 1)

(SPLIT-LIST '(a))
(SPLIT-LIST '(a b c d))
(SPLIT-LIST '(a b c d e))
(SPLIT-LIST '(a b c d e f))
(SPLIT-LIST '(a b c d e f g))
(SPLIT-LIST '(a b c d e f g h))
(SPLIT-LIST '(a b c d e f g 1 ))
(SPLIT-LIST '(a b c d e f g 0 9))
(SPLIT-LIST '(a b c d e f g 0 9 69))

(BTREE-HEIGHT 1)
(BTREE-HEIGHT '(1 2))
(BTREE-HEIGHT '(1 (2 3)))
(BTREE-HEIGHT '((1 2) (3 4)))
(BTREE-HEIGHT '((1 (2 3)) ((4 5) (6 7))))
(BTREE-HEIGHT '(((1 2) (3 4)) ((5 6) (7 8))))

(LIST2BTREE '(1))
(LIST2BTREE '(1 2))
(LIST2BTREE '(1 2 3))
(LIST2BTREE '(1 2 3 4))
(LIST2BTREE '(1 2 3 4 5 6 7))
(LIST2BTREE '(1 2 3 4 5 6 7 8))

(BTREE2LIST 1)
(BTREE2LIST '(1 2))
(BTREE2LIST '(1 (2 3)))
(BTREE2LIST '((1 2) (3 4)))
(BTREE2LIST '((1 (2 3)) ((4 5) (6 7))))
(BTREE2LIST '(((1 2) (3 4)) ((5 6) (7 8))))
